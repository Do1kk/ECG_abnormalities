- trzeba przetworzyć dane "Myślałem, żeby podzielić sygnał na kawałki, z nich wygenerować obrazy i
potworzyć pary: obraz-typ arytmii czyli input-destination dla sieci
neuronowej. Obraz to może być wykreślony przebieg albo reprezentacja 2-wymiarowa
sygnału (spektrogram, falki itp.)"

- należy pamiętać że uzywany jest tylko jeden sygnał z dwóch, "klasyfikacja na podstawie 
jednego sygnału"

- znormalizować jakoś zakres danych przed utworzeniem plików .jpg

- stworzyć jakieś bardziej uogólnione wczytywanie wyszukiwanie QRS, te co teraz jest 
bazuje na bazie MIT-BIH

- zrobić program co będzie wyświetlał kilka początkowych przebiegów pliku typów,
by sprawdzić samemu jak to wygląda

##########################################################
- pogrupować przedziały na typy i zapisać do plików mających nazwy typów

- zamiast używania pętli i oznaczania wszystkiego co nie jest adnotacją peaks jako '0'
użyć funkcji filter([function | expression], [collection]) <- zwraca generator nie listę

- można stwożyć słownik (jeśli będzie potrzebny) za pomocą dict(zip(pierwsza_lista, druga_lista))

- poczytać o arytmii, czy na pewno w taki sposób można wyszukać wadę, tzn. czy można 
zrobić to patrząc tylko na zbiór wycinków, nie przetwarzając sygnału w całości

- uwzglęndić tylko te wzniesienia w adnotacjach które nie są błędne (jest chyba kilka adnotacji
które opisują błędy a nie wzniesienia)

- poprawienie dokładności preprocesingu, by lepiej znajdował wzniesienia,
najlepiej by wykożystywał adnotacje a nie sam szukał, chociaż takie wyszukiwanie też
się przyda np. jak będzie się chciało wykożystać sygnał z innej bazy, bez adnotacji

- może zrobić bez rozróżnienia dobrych wzniesień bo przecież i te złe wzniesienia są ważne,
a dopiero na samym końcu wywalić te co są błędne (błęd aparatury)

- zamiana ciągłego kodu na tak z użyciem funkcji, lepiej zmieniać i lepiej wygląda

- stworzenie programu który pokazuje stworzone pliki .csv jako obrazy,
widać na nich bardzo szybko czy dobrze zostały zebrane wzniesienia